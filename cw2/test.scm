(module test
  (include "formula.scm")
    (include "formula-string.scm")
      (include "evaluate-formula.scm")
        (include "formula-nnf.scm"))

(display "Running formula? tests")
(newline)
(display "\t(formula? '())  \t\t\t\t    Expected #f \t\t    got ")
(display (formula? '()))
(newline)
(display "\t(formula? 'a)  \t\t\t\t\t    Expected #t \t\t    got ")
(display (formula? 'a))
(newline)
(display "\t(formula? '(not a))  \t\t\t\t    Expected #t \t\t    got ")
(display (formula? '(not a)))
(newline)
(display "\t(formula? '(not a b))  \t\t\t\t    Expected #f \t\t    got ")
(display (formula? '(not a b)))
(newline)
(display "\t(formula? '(and a b))  \t\t\t\t    Expected #t \t\t    got ")
(display (formula? '(and a b)))
(newline)
(display "\t(formula? '(or a b))  \t\t\t\t    Expected #t \t\t    got ")
(display (formula? '(or a b)))
(newline)
(display "\t(formula? '(or (not a) (and b c)))  \t\t    Expected #t \t\t    got ")
(display (formula? '(or (not a) (and b c))))
(newline)
(display "\t(formula? '(or (not and) (and b c)))  \t\t    Expected #f \t\t    got ")
(display (formula? '(or (not and) (and b c))))
(newline)
(newline)


(display "Running formula->string tests")
(newline)
(display "\t(formula->string 'a) \t\t\t\t    Expected \"A\" \t\t    got ")
(display (formula->string 'a))
(newline)
(display "\t(formula->string '(not a)) \t\t\t    Expected \"~A\" \t\t    got ")
(display (formula->string '(not a)))
(newline)
(display "\t(formula->string '(not (not a))) \t\t    Expected \"~~A\" \t\t    got ")
(display (formula->string '(not (not a))))
(newline)
(display "\t(formula->string '(or a b c)) \t\t\t    Expected \"A v B v C\" \t    got ")
(display (formula->string '(or a b c)))
(newline)
(display "\t(formula->string '(or (not a) (and b c))) \t    Expected \"~A v (B ^ C)\" \t    got ")
(display (formula->string '(or (not a) (and b c))))
(newline)
(newline)

(display "Running evaluate-formula tests")
(newline)
(display "\t(evaulate-formula 'a '((a . #t))) \t\t    Expected #t \t\t    got ")
(display (evaluate-formula 'a '((a . #t))))
(newline)
(display "\t(evaulate-formula 'a '((a . #f))) \t\t    Expected #f \t\t    got ")
(display (evaluate-formula 'a '((a . #f))))
(newline)
(display "\t(evaulate-formula '(not a) '((a . #f))) \t    Expected #t \t\t    got ")
(display (evaluate-formula '(not a) '((a . #f))))
(newline)
(display "\t(evaulate-formula '(and a b) '((a . #t) (b . #f)))  Expected #f \t\t    got ")
(display (evaluate-formula '(and a b) '((a . #t) (b . #f))))
(newline)
(display "\t(evaulate-formula '(or a b) '((a . #t) (b . #f)))   Expected #t \t\t    got ")
(display (evaluate-formula '(or a b) '((a . #t) (b . #f))))
(newline)
(newline)

(display "Running formula->nnf tests")
(newline)
(display "\t(formula->nnf 'a) \t\t\t\t    Expected a \t\t\t    got ")
(display (formula->nnf 'a))
(newline)
(display "\t(formula->nnf '(not a)) \t\t\t    Expected (not a) \t\t    got ")
(display (formula->nnf '(not a)))
(newline)
(display "\t(formula->nnf '(not (not a))) \t\t\t    Expected a \t\t\t    got ")
(display (formula->nnf '(not (not a))))
(newline)
(display "\t(formula->nnf '(not (and a b))) \t\t    Expected (or (not a) (not b))   got ")
(display (formula->nnf '(not (and a b))))
(newline)
(display "\t(formula->nnf '(not (or a b))) \t\t\t    Expected (and (not a) (not b))  got ")
(display (formula->nnf '(not (or a b))))
(newline)
(display "\t(formula->nnf '(not (and a (not b)))) \t\t    Expected (or (not a) b) \t    got ")
(display (formula->nnf '(not (and a (not b)))))
(newline)
(newline)
